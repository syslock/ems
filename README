Annotated Directory Structure
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ems/
    images/ : raw image data not used by the webapp
    iswi/ : ISWI specific, server-side data structures and code
        profile.py : definition of iswi.Contact and iswi.Application db objects
    lib/ : more generic server-side code and data structures
        application.py : web application core classes (Application, Session, ...)
        db_object.py : database object abstraction layer (DBObject class) 
                       and simple derived classes
        errors.py : exceptions
        password.py : password encryption + checking
        user.py : definition of User class as a DBObject
    modules/ : server-side request handlers addressed by the do=module parameter
        delete.py : delete objects
        get.py : retrieve objects
        login.py
        logout.py
        register.py
        search.py
        status.py : request session status
        store.py : store or update objects
    templates/ : Mako templates directory (accessable through ?do=render&tpl=...)
        application.html : ISWI application form
        contact.html : personal contact data form
        login.html : login and registration form
        overview.html : overview page
    tools/ : development-tools (mainly translation stuff)
    webroot/ : public data visibile to or executable by web clients
        css/ : stylesheets
        images/ : images
        js/ : JavaScript
            entry.js : entry handling (get, store, display)
            localization.js : translations and related code
            login.js : login specific code
            main.js : RequireJS main file, currently used to include the rest of the code
            require.js : RequireJS library
            jquery.js : jQuery libary
            jquery.cookie.js : jQuery Cookie Plugin
            util.js : some generic routines used throughout the code
        ems.wsgi : application entry point (FIXME: should this be here?)
        index.html : redirects to overview template
    config.py.example : example configuration file (see Install)
    ems-init.py : SQLite database initialization script (see Install)
    ems.kdev4 : simple KDevelop4 project description
    README : this file

Installation
~~~~~~~~~~~~
- install Python 3
- install the Mako template library (http://www.makotemplates.org/) for Python 3
- setup a webserver with a Python 3 WSGI component
    - e.g. Apache/mod_wsgi, nginx/uwsgi_python32
- make webroot/ accessable by your webserver
    - apache example:
        <Directory "/path/to/ems/webroot">
            Options Indexes FollowSymLinks
            AllowOverride None
            Order allow,deny
            Allow from all
        </Directory>
        Alias "/ems" "/path/to/ems/webroot"
    - nginx example:
        location /ems {
            alias   /path/to/ems/webroot;
            index  index.html index.htm;
        }
- instruct Python 3 WSGI module to execute webroot/ems.wsgi as a WSGI handler
    - Apache/mod_wsgi example:
        <Location /ems>
            Options +ExecCGI
            AddHandler wsgi-script .wsgi
            SetEnv EMS_PATH "/path/to/ems"
        </Location>
    - nginx/uwsgi example:
        - having an uwsgi/python3 handler running like this:
            uwsgi_python32 --socket 127.0.0.1:3031 --file /path/to/ems/webroot/ems.wsgi
          then the following nginx setup should work:
            location ~ \.wsgi$ {
                 uwsgi_pass 127.0.0.1:3031;
                 uwsgi_param EMS_PATH /path/to/ems;
                 include uwsgi_params;
            }
- EMS_PATH environment variable has to point to your application run path
    - You may use your ems checkout directory for development purposes.
    - subdirectories needed in production: iswi/ lib/ modules/ templates/
- initialize EMS database at EMS_PATH:
    cat ems-init.sql |sqlite3 ${EMS_PATH)/ems.db
- create ${EMS_PATH}/config.py (see config.py.example)


Problems with Installation
~~~~~~~~~~~~~~~~~~~~~~~~~~
- Error 403
    - using apache (version 2.4): first check the error log (probably /var/log/httpd/error_log or something)
        - if you see a line like the following that's probably because of some config issues:
            client denied by server configuration: /path/to/ems/webroot
        - open the httpd.conf (or whatever your config file is) where you added the directives from above
        - the following changes are neccessary if you use apache 2.4 because the directives Order, Allow and Deny are no longer valid in this version
            - for more information on that subject, take a look at the official documentation: http://httpd.apache.org/docs/2.4/upgrading.html
        - comment or delete these lines:
            Order allow,deny
            Allow from all
        - and add this one:
            Require all granted
        - after that it should look like this:
            <Directory "/path/to/ems/webroot">
                Options Indexes FollowSymLinks
                AllowOverride None
                #Order allow,deny
                #Allow from all
                Require all granted
            </Directory>
        - now save the file and restart your httpd
        - if it's still not working check the permissions of the ems directory
            - make shure that the user that is running the httpd process has sufficient privileges
            - my solution was to move the whole ems diretory tree from inside my home directory
                to a different location and recursively changing the ownership of the tree
                    mv /home/my-user/ems /ems
                    chown -R http:http /ems

